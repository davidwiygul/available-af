# provision_q_later
# provision_q_later PUBLIC_IP
# installs RabbitMQ on given instance,
#     joins this new node to cluster represented by first entry
#         of MQ_IP in provision.config, with mirroring of QUEUE_HOST queues
#     adds private ip of given instance to MQ_IP and to interface.ini
# assumes MQ_IP and QUEUE_HOST have been set in provision.config
# typically run immediately after provision_q_first or provision_q_later
# can be run on arbitrarily many instances

#!/bin/bash

source provision.config

scp -i $AWS_SSH_KEY ./.erlang.cookie ubuntu@$1:/home/ubuntu

ssh -T -i $AWS_SSH_KEY ubuntu@$1 << HERE
    sudo apt-get update
    sudo apt-get install -y rabbitmq-server
    sudo rabbitmqctl stop
    sudo mv $ERLANG_COOKIE_PATH /var/lib/rabbitmq/.erlang.cookie.bak
    sudo mv ~/.erlang.cookie $ERLANG_COOKIE_PATH
    sudo chown rabbitmq:rabbitmq $ERLANG_COOKIE_PATH
    sudo chmod 600 $ERLANG_COOKIE_PATH
    exit
HERE

sleep 10

ssh -i $AWS_SSH_KEY ubuntu@$1 sudo systemctl start rabbitmq-server

MQ_FIRST=$(echo $MQ_IP | sed "s|,.*$||")

ssh -T -i $AWS_SSH_KEY ubuntu@$1 << HERE
    sudo rabbitmqctl stop_app
    sudo rabbitmqctl join_cluster rabbit@ip-$(echo $MQ_FIRST | tr '.' '-')
    sudo rabbitmqctl start_app
    sudo rabbitmqctl set_policy -p $QUEUE_HOST ha-all "" '{"ha-mode":"exactly", "ha-params":2, "ha-sync-mode":"automatic"}'
    exit
HERE

PRIVATE_IP=$(ssh -i $AWS_SSH_KEY ubuntu@$1 "hostname -I" | tr -d '[:space:]')

sed -i "s|\(^MQ_IP='.*\)'|\1, $PRIVATE_IP'|" provision.config
sed -i "s|\(^q_public_ip = .*$\)|\1, $1|" ../heirflow/interface.ini
