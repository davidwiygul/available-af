# provision_q_first
# provision_q_first PUBLIC_IP
# installs RabbitMQ server on given instance,
#     records instance's private IP in provision.config as MQ_IP,
#     downloads server's .erlang.cookie (for future mirroring)
#     and writes queue connection data to interface.ini
# assumes that the following variables have been set in provision.config:
#     QUEUE_USER, QUEUE_PWD, QUEUE_HOST,
#     NEWS_QUEUE_USER, NEWS_QUEUE_PWD, and NEWS_QUEUE_VHOST
# can (but need not) be followed by provision_q_later on another instance


#!/bin/bash

source provision.config

ssh -T -i $AWS_SSH_KEY ubuntu@$1 << HERE
    sudo apt-get update
    sudo apt-get install -y rabbitmq-server
    sudo rabbitmqctl add_user $QUEUE_USER $QUEUE_PWD
    sudo rabbitmqctl set_user_tags $QUEUE_USER administrator
    sudo rabbitmqctl add_vhost $QUEUE_HOST
    sudo rabbitmqctl set_permissions -p $QUEUE_HOST $QUEUE_USER ".*" ".*" ".*"
    sudo rabbitmqctl delete_user guest

    sudo rabbitmqctl add_user $NEWS_QUEUE_USER $NEWS_QUEUE_PWD
    sudo rabbitmqctl add_vhost $NEWS_QUEUE_VHOST
    sudo rabbitmqctl set_permissions -p $NEWS_QUEUE_VHOST $NEWS_QUEUE_USER ".*" ".*" ".*"

    exit
HERE

MQ_IP=$(ssh -i $AWS_SSH_KEY ubuntu@$1 "hostname -I" | tr -d '[:space:]')

sed -i "s|^MQ_IP.*|MQ_IP='$MQ_IP'|" provision.config

ssh -i $AWS_SSH_KEY ubuntu@$1 "sudo cat $ERLANG_COOKIE_PATH">./.erlang.cookie

declare -A dict=(
    [q_public_ip]=$1
    [q_user]=$NEWS_QUEUE_USER
    [q_pwd]=$NEWS_QUEUE_PWD
    [q_vhost]=$NEWS_QUEUE_VHOST
    )

for key in ${!dict[@]}; do
    value=${dict[$key]}
    sed -i "s|\(^$key\).*|\1 = $value|" ../heirflow/interface.ini
done
